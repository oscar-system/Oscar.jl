# Compute the ideal sheaves and Weil divisors of the rays of `polyhedral_fan(X)` 
# according to the "orbit-cone-correspondence", Theorem 3.2.6 in 
# Cox-Little-Schenk.
#
# We would like to use Equation (3.2.7) from page 121 of the electronic
# version of the CLS book. It turned out that there is a misprint in this
# formula in the online version, always leading to the unit ideal. In the
# print version, which might not be accessible to all of us, the formula
# has been corrected.
#
# Let τ ∈ Σ be a ray and σ ∈ Σ a maximal cone. The ideal of the
# intersection of the orbit with the chart I(O(τ) ∩ Uσ) ⊂ ℂ[σ ̌∩ M]
# is either
#   1) the unit ideal if τ ⊄ σ
#   2) the ideal generated by the elements in σ ̌∩ M ∖ τ⟂, i.e. the
#      elements of σ ̌∩ M which are not in the annihilator of τ.
#
# To get hold of these generators, we make the following assumption
#
#   (*) When {v₁,…,vᵣ} is a Hilbert basis of σ ̌∩ M, then in case 2) 
#       above the elements in σ ̌∩ M ∖ τ⟂  are precisely those in 
#         Σ (vⱼ + σ ̌∩ M)
#       for those vⱼ which are not in τ⟂. Hence, we can use the 
#       monomials corresponding to those vⱼ as generators of the 
#       ideal.
#
# What we do above is also supported by the description of divisors 
# in CLS, Formula (4.3.2): For a ray ρ ∈ Σ(1) the divisor -D with 
# linear system consisting of the rational functions f which vanish 
# on D is then locally given by 
#
#   P_D = { m ∈ M_ℝ : ⟨m,u_r⟩ ≥ -a_r for all r ∈ Σ(1) } 
#
# where a_ρ = 1 and a_r = 0 for r ≠ ρ. When we view σ ̌∩ M_ℝ as the 
# monomials of the coordinate ring of that affine variety, its 
# intersection with P_D should be precisely what we compute. 
#
# proof of (*): Without loss of generality we may assume that 
# v₁,…,vₛ ∈ τ⟂ and vⱼ ∉ τ⟂ for s < j ≤ r. Let w ∈ σ ̌∩ M be arbitrary 
# and let w = a₁⋅v₁ + a₂⋅v₂ + … + aᵣ⋅vᵣ be a representation of w 
# in the Hilbert basis. We claim: 
#
#   w ∈ τ⟂  ⇔  ∃ (a₁,…, aₛ) ∈ ℤ_≥0 : w = a₁⋅v₁ + a₂⋅v₂ + … + aₛ⋅vₛ
#
# The direction "⇐ " is trivial. For "⇒ " write w as a full linear 
# combination 
#    w = a₁⋅v₁ + a₂⋅v₂ + … + aᵣ⋅vᵣ = w⟂ + w'
# with w⟂ = a₁⋅v₁ + a₂⋅v₂ + … + aₛ⋅vₛ ∈ τ⟂ and w' the remainder. 
# But then, since τ⟂ is a linear subspace, 
#    w' = aₛ₊₁⋅vₛ₊₁ + … + aᵣ⋅vᵣ ∈ τ⟂, 
# too. On the other hand, none of the vⱼ was in τ⟂ for j > s, 
# so neither can be any convex combination, but the trivial one. 
# This proves the claim. Now (*) follows directly.
function _torusinvariant_weil_divisors(X::NormalToricVariety; check::Bool=false)
  if has_attribute(X, :_torusinvariant_weil_divisors)
    return get_attribute(X, :_torusinvariant_weil_divisors)::Vector{<:AbsWeilDivisor}
  end
  ray_list = rays(polyhedral_fan(X))
  ideal_sheaves = Vector{IdealSheaf}()
  for tau in ray_list
    tau_dual = polarize(cone(tau))
    ideal_dict = IdDict{AbsSpec, Ideal}()
    for U in affine_charts(X)
      if !(tau in cone(U))
        ideal_dict[U] = ideal(OO(U), one(OO(U)))
        continue
      end
      sigma_dual = weight_cone(U)
      hb = hilbert_basis(sigma_dual)
      x = gens(OO(U))
      ideal_dict[U] = ideal(OO(U), [x[i] for i in 1:length(x) if !(-hb[i] in tau_dual)])
    end
    push!(ideal_sheaves, IdealSheaf(X, ideal_dict; check))
  end
  generating_divisors = [WeilDivisor(X, ZZ, IdDict{IdealSheaf, ZZRingElem}(I => one(ZZ))) for I in ideal_sheaves]
  result = generating_divisors
  set_attribute!(X, :_torusinvariant_weil_divisors=>result)
  return result
end
