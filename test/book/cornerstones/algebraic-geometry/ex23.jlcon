julia> R, (x, y) = polynomial_ring(QQ, ["x", "y"]);

julia> f = (x-y)*((x+y)^2-(x-y)^3)-(x+y)^4;

julia> g = y^2-x^2+3*x^3;

julia> H = homogenizer(R, "z");

julia> F = H(f);

julia> G = H(g);

julia> I = ideal([F, G]);

julia> degree(radical(I))
5

julia> cI = primary_decomposition(I);

julia> degrees = map(comp -> degree(comp[1]), cI)
2-element Vector{ZZRingElem}:
 4
 8

julia> pos = findfirst(deg -> deg == 8, degrees)
2

julia> cI[pos][2]
Ideal generated by
  y
  x
