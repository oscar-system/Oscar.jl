julia> Rt, (x,y,t) = polynomial_ring(QQ, ["x","y","t"]);

julia> ft = -2*x^6 - 5*x^5*y*t + 8*x^5*t - 3*x^5 + 10*x^4*y^2*t^2 - 2*x^4*y^2*t + 10*x^4*y*t^2 - 12*x^4*y*t - 8*x^4*t^2 + 12*x^4*t + 24*x^3*y^3*t^2 + 14*x^3*y^3*t + 20*x^3*y^2*t^2 + 6*x^3*y^2*t + 24*x^3*y*t^2 + x^3*y*t - 12*x^3*t^2 + 10*x^2*y^4*t^2 - 2*x^2*y^4*t + 20*x^2*y^3*t^2 + 6*x^2*y^3*t - 44*x^2*y^2*t^2 - 20*x^2*y^2*t - 2*x^2*y*t^2 + x^2*y - 5*x*y^5*t + 10*x*y^4*t^2 - 12*x*y^4*t + 24*x*y^3*t^2 + x*y^3*t - 2*x*y^2*t^2 + x*y^2 - 2*x*y*t - 2*y^6 + 8*y^5*t - 3*y^5 - 8*y^4*t^2 + 12*y^4*t - 12*y^3*t^2;

julia> R, (x,y) = polynomial_ring(QQ, ["x","y"]);

julia> phi0 = hom(Rt,R,[x,y,0]);

julia> f = phi0(ft);

julia> H = homogenizer(R, "z");

julia> F = H(f);

julia> S = parent(F);

julia> C = plane_curve(F);

julia> I = adjoint_ideal(C)
Ideal generated by
  x*y - y^2
  x^2 - y^2
  y^3 + y^2*z

julia> m3 = ideal(gens(S))^3;

julia> K = intersect(I, m3)
Ideal generated by
  x*y*z - y^2*z
  x^2*z - y^2*z
  y^3 + y^2*z
  x*y^2 + y^2*z
  x^2*y + y^2*z
  x^3 + y^2*z

julia> P5, _ = graded_polynomial_ring(QQ, ["x_0", "x_1", "x_2", "x_3", "x_4", "x_5"]);

julia> PC, pr = quo(S, ideal([F]));

julia> psi = hom(P5, PC, [pr(K[i]) for i = 1:6]);

julia> J = kernel(psi);

julia> JJ = ideal(minimal_generating_set(J));

julia> Q , _ = quo(P5, JJ);

julia> re = free_resolution(Q);

julia> minimal_betti_table(re)
       0  1   2  3  4
---------------------
0    : 1  -   -  -  -
1    : -  6   8  3  -
2    : -  3   8  6  -
3    : -  -   -  -  1
---------------------
total: 1  9  16  9  1


julia> phi1 = hom(Rt,R,[x,y,R(1//10)]);

julia> f = phi1(ft);

julia> F = H(f);

julia> C = plane_curve(F);

julia> I = adjoint_ideal(C)
Ideal generated by
  6*x*y - 5*y^2 + y*z
  5*x^2 - x*z - 5*y^2 + y*z

julia> m3 = ideal(gens(S))^3;

julia> K = intersect(I, m3)
Ideal generated by
  6*x*y*z - 5*y^2*z + y*z^2
  5*x^2*z - x*z^2 - 5*y^2*z + y*z^2
  5*y^3 + 4*y^2*z - y*z^2
  6*x*y^2 + 5*y^2*z - y*z^2
  6*x^2*y + 5*y^2*z - y*z^2
  25*x^3 - x*z^2 + 20*y^2*z - 4*y*z^2

julia> PC, pr = quo(S, ideal([F]));

julia> psi = hom(P5, PC, [pr(K[i]) for i = 1:6]);

julia> J = kernel(psi);

julia> JJ = ideal(minimal_generating_set(J));

julia> Q , _ = quo(P5, JJ);

julia> re = free_resolution(Q);

julia> minimal_betti_table(re)
       0  1   2  3  4
---------------------
0    : 1  -   -  -  -
1    : -  6   5  -  -
2    : -  -   5  6  -
3    : -  -   -  -  1
---------------------
total: 1  6  10  6  1
