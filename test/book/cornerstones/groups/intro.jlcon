julia> G_perm = @permutation_group(5, (2,5)(3,4), (1,3)(4,5))
Permutation group of degree 5

julia> order(G_perm)
10

julia> describe(G_perm)
"D10"

julia> r = G_perm[1] * G_perm[2]
(1,3,5,2,4)

julia> g = perm([1,2,3,5,4])  # 'tabular' notation
(4,5)

julia> g in G_perm
false

julia> G_perm([2,1,5,4,3])  # 'tabular' notation with explicit parent
(1,2)(3,5)

julia> cperm([1,2],[4,5])   # cycle decomposition
(1,2)(4,5)

julia> @perm (1,2)(4,5)     # cycle notation via macro
(1,2)(4,5)

julia> K = algebraic_closure(QQ)
Field of algebraic numbers

julia> e = one(K)
Root 1.00000 of x - 1

julia> s, c = sinpi(2*e/5), cospi(2*e/5)
(Root 0.951057 of 16x^4 - 20x^2 + 5, Root 0.309017 of 4x^2 + 2x - 1)

julia> mat_rot = matrix([ c -s ; s c ]);

julia> mat_sigma1 = matrix(K, [ -1 0 ; 0 1 ]);

julia> G_mat = matrix_group(mat_rot, mat_sigma1)
Matrix group of degree 2
  over field of algebraic numbers

julia> is_isomorphic(G_mat, G_perm)
true

julia> p = K.([0,1]);  # coordinates of vertex 1, expressed over K

julia> orb = orbit(G_mat, *, p)
G-set of
  matrix group of degree 2 over QQBar
  with seeds Vector{QQBarFieldElem}[[Root 0 of x, Root 1.00000 of x - 1]]

julia> pts = collect(orb)
5-element Vector{Vector{QQBarFieldElem}}:
 [Root 0 of x, Root 1.00000 of x - 1]
 [Root 0.951057 of 16x^4 - 20x^2 + 5, Root 0.309017 of 4x^2 + 2x - 1]
 [Root 0.587785 of 16x^4 - 20x^2 + 5, Root -0.809017 of 4x^2 + 2x - 1]
 [Root -0.951057 of 16x^4 - 20x^2 + 5, Root 0.309017 of 4x^2 + 2x - 1]
 [Root -0.587785 of 16x^4 - 20x^2 + 5, Root -0.809017 of 4x^2 + 2x - 1]

julia> visualize(convex_hull(pts))

julia> R2 = free_module(K, 2) # the "euclidean" plane over K
Vector space of dimension 2 over QQBar

julia> A = R2([0,1])
(Root 0 of x, Root 1.00000 of x - 1)

julia> pts = [A*mat_rot^i for i in 0:4];

julia> sigma_1 = hom(R2, R2, [-R2[1], R2[2]])
Module homomorphism
  from vector space of dimension 2 over QQBar
  to vector space of dimension 2 over QQBar

julia> rot = hom(R2, R2, mat_rot);

julia> G_generic = generic_group(closure([rot, sigma_1], *), *)[1]
Generic group of order 10 with multiplication table

julia> permutation_group(G_generic)
Permutation group of degree 10

julia> is_isomorphic(ans, G_perm)
true

julia> G_fp = fp_group(G_perm)
Finitely presented group of order 10

julia> gens(G_fp)
2-element Vector{FPGroupElem}:
 F1
 F2

julia> relators(G_fp)
3-element Vector{FPGroupElem}:
 F1^2
 F1^-1*F2*F1*F2^-4
 F2^5

julia> F = free_group(2)
Free group of rank 2

julia> G_cox, _ = quo(F, [F[1]^2, F[2]^2, (F[1]*F[2])^5])
(Finitely presented group, Hom: F -> G_cox)

julia> is_isomorphic(G_cox, G_perm)
true

julia> F = free_group(:a, :b, :c); a,b,c = gens(F);

julia> G, _ = quo(F, [a^2, b^2, c^2, (a*b)^3, (a*c)^2, (b*c)^3])
(Finitely presented group, Hom: F -> G)

julia> H, _ = quo(F, [a^2, b^2, c^2, (a*b)^3, (a*c)^3, (b*c)^3])
(Finitely presented group, Hom: F -> H)

julia> is_finite(G)
true

julia> describe(G)
"S4"

julia> describe(H)
"a finitely presented group"

julia> H1, _ = derived_subgroup(H)
(Finitely presented group, Hom: H1 -> H)

julia> H2, _ = derived_subgroup(H1)
(Finitely presented group, Hom: H2 -> H1)

julia> describe(H2)
"Z x Z"

julia> describe(quo(H, H2)[1])
"(C3 x C3) : C2"

julia> dihedral_group(10)
Pc group of order 10

julia> dihedral_group(PermGroup, 10)
Permutation group of degree 5
