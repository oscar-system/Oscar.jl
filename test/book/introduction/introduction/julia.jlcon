julia> R, p = residue_ring(ZZ, 3);

julia> typeof(R)
zzModRing

julia> F, p = residue_field(ZZ, 3);

julia> typeof(F)
FqField

julia> typeof(2)
Int64

julia> 2^100
0

julia> ZZ(2)^100
1267650600228229401496703205376

julia> 1/2
0.5

julia> 1//2
1//2

julia> ccall(:sin, Float64, (Float64,), 1.0)
0.8414709848078965

julia> u = Int64[1,2,3,4,5,6];

julia> ccall(:memset, Cvoid, (Ptr{Int}, Int, UInt), u, 0, length(u)*sizeof(Int64))

julia> show(u)
[0, 0, 0, 0, 0, 0]

julia> prod(1-1/a^2 for a = 1:100 if is_prime(a))
0.6090337253995164

julia> QQx, x = polynomial_ring(QQ, "x");

julia> typeof(x)
QQPolyRingElem

julia> Ry, y = polynomial_ring(QQ, ["y"]);

julia> typeof(y)
Vector{QQMPolyRingElem} (alias for Array{QQMPolyRingElem, 1})

julia> QQx, x = QQ["x"];

julia> function next(a)
          return a+1
       end;

julia> next(2)
3

julia> next(x)
x + 1

julia> next('a')
'b': ASCII/Unicode U+0062 (category Ll: Letter, lowercase)

julia> next(sin)
ERROR: MethodError: no method matching +(::typeof(sin), ::Int64)
[...]

julia> function next(a::typeof(sin))
         return x->a(x)+1
       end;

julia> next(sin)
#55 (generic function with 1 method)

julia> ans(1)
1.8414709848078965

julia> sin(1)+1
1.8414709848078965

julia> next(cos)
ERROR: MethodError: no method matching +(::typeof(cos), ::Int64)
[...]

julia> supertype(typeof(sin))
Function

julia> supertype(typeof(cos))
Function

julia> function next(a::Function)
         return x->a(x)+1
       end;

julia> a = next(next(tan))
#57 (generic function with 1 method)

julia> a(1)
3.5574077246549023

julia> tan(1)+2
3.5574077246549023
